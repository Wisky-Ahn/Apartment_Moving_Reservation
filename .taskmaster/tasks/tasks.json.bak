{
  "metadata": {
    "version": "1.0.0",
    "createdAt": "2024-12-18T00:00:00Z",
    "updatedAt": "2024-12-18T00:00:00Z",
    "projectName": "FNM - 아파트 이사예약 관리 시스템"
  },
  "tasks": [
    {
      "id": 1,
      "title": "환경 변수 설정 문제 해결",
      "description": ".env 파일 생성이 GlobalIgnore로 차단되어 데이터베이스 연결 URL이 잘못 설정됨",
      "status": "done",
      "priority": "high",
      "dependencies": [],
      "createdAt": "2024-12-18T00:00:00Z",
      "updatedAt": "2024-12-18T00:00:00Z",
      "details": "config.py에서 DATABASE_URL을 postgresql://fnmuser:fnmpassword@localhost:5432/fnm_db로 직접 설정하여 사용자 등록 API가 정상 작동하도록 수정",
      "testStrategy": "사용자 등록 API 호출 테스트 및 데이터베이스 연결 확인",
      "subtasks": [
        {
          "id": "1.1",
          "title": "config.py 파일 수정",
          "description": "DATABASE_URL을 하드코딩으로 설정",
          "status": "done",
          "details": "app/core/config.py에서 DATABASE_URL 변수를 직접 설정"
        },
        {
          "id": "1.2",
          "title": "FastAPI 서버 재시작",
          "description": "변경된 설정으로 서버 재시작",
          "status": "done",
          "details": "uvicorn 프로세스 종료 후 새로운 설정으로 재시작"
        },
        {
          "id": "1.3",
          "title": "사용자 등록 API 테스트",
          "description": "수정된 설정으로 API 동작 확인",
          "status": "done",
          "details": "curl 또는 FastAPI docs를 통해 POST /api/users/register 테스트"
        }
      ]
    },
    {
      "id": 2,
      "title": "예약 API 라우터 구현",
      "description": "예약 시스템의 모든 API 엔드포인트를 구현",
      "status": "done",
      "priority": "high",
      "dependencies": [
        1
      ],
      "createdAt": "2024-12-18T00:00:00Z",
      "updatedAt": "2024-12-18T00:00:00Z",
      "details": "/api/reservations 경로의 모든 CRUD 작업과 승인/거부 시스템 구현",
      "testStrategy": "예약 생성, 조회, 수정, 삭제 및 관리자 승인 기능 테스트",
      "subtasks": [
        {
          "id": "2.1",
          "title": "예약 API 라우터 파일 생성",
          "description": "backend/app/api/reservations.py 파일 생성",
          "status": "done",
          "details": "FastAPI APIRouter 설정 및 기본 구조 생성"
        },
        {
          "id": "2.2",
          "title": "예약 CRUD API 구현",
          "description": "예약 생성, 조회, 수정, 삭제 엔드포인트 구현",
          "status": "done",
          "details": "POST, GET, PUT, DELETE 엔드포인트 구현"
        },
        {
          "id": "2.3",
          "title": "예약 승인/거부 시스템",
          "description": "관리자 전용 예약 승인/거부 API 구현",
          "status": "done",
          "details": "POST /reservations/{id}/approve, POST /reservations/{id}/reject 구현"
        },
        {
          "id": "2.4",
          "title": "예약 충돌 검증 로직",
          "description": "같은 시간대 중복 예약 방지 로직 구현",
          "status": "done",
          "details": "날짜, 시간대, 사다리차/엘리베이터 중복 체크"
        }
      ]
    },
    {
      "id": 3,
      "title": "공지사항 API 라우터 구현",
      "description": "공지사항 관리를 위한 모든 API 엔드포인트 구현",
      "status": "done",
      "priority": "medium",
      "dependencies": [
        1
      ],
      "createdAt": "2024-12-18T00:00:00Z",
      "updatedAt": "2024-12-18T00:00:00Z",
      "details": "/api/notices 경로의 CRUD 작업과 중요공지/상단고정 기능 구현",
      "testStrategy": "공지사항 작성, 조회, 수정, 삭제 및 필터링 기능 테스트",
      "subtasks": [
        {
          "id": "3.1",
          "title": "공지사항 API 라우터 파일 생성",
          "description": "backend/app/api/notices.py 파일 생성",
          "status": "done",
          "details": "FastAPI APIRouter 설정 및 기본 구조 생성"
        },
        {
          "id": "3.2",
          "title": "공지사항 CRUD API 구현",
          "description": "공지사항 생성, 조회, 수정, 삭제 엔드포인트 구현",
          "status": "done",
          "details": "관리자 전용 작성/수정/삭제, 전체 사용자 조회 기능"
        },
        {
          "id": "3.3",
          "title": "공지사항 스키마 완성",
          "description": "notices 관련 Pydantic 스키마 구현",
          "status": "done",
          "details": "backend/app/schemas/notice.py 파일 생성"
        },
        {
          "id": "3.4",
          "title": "공지사항 필터링 기능",
          "description": "유형별, 중요도별 공지사항 필터링 구현",
          "status": "done",
          "details": "쿼리 파라미터를 통한 동적 필터링"
        }
      ]
    },
    {
      "id": 4,
      "title": "Frontend-Backend API 연결",
      "description": "Next.js 프론트엔드와 FastAPI 백엔드 간 완전한 API 통신 구현",
      "status": "done",
      "priority": "high",
      "dependencies": [
        2,
        3
      ],
      "createdAt": "2024-12-18T00:00:00Z",
      "updatedAt": "2024-12-18T00:00:00Z",
      "details": "axios HTTP 클라이언트 설정 및 모든 컴포넌트에서 API 호출 구현",
      "testStrategy": "프론트엔드에서 모든 백엔드 API 기능 정상 동작 확인",
      "subtasks": [
        {
          "id": "4.1",
          "title": "axios HTTP 클라이언트 설정",
          "description": "lib/api.js 파일에 기본 axios 설정 구현",
          "status": "done",
          "details": "기본 URL, 인터셉터, 에러 처리 설정"
        },
        {
          "id": "4.2",
          "title": "환경 변수 설정",
          "description": "프론트엔드 환경 변수 설정",
          "status": "done",
          "details": "NEXT_PUBLIC_API_URL=http://localhost:8000 설정"
        },
        {
          "id": "4.3",
          "title": "로그인 컴포넌트 API 연결",
          "description": "app/login/page.tsx에서 FastAPI 로그인 연결",
          "status": "done",
          "details": "NextAuth 설정 및 JWT 토큰 관리"
        },
        {
          "id": "4.4",
          "title": "예약 컴포넌트 API 연결",
          "description": "예약 관련 모든 컴포넌트에서 API 호출",
          "status": "done",
          "details": "예약 생성, 조회, 수정 기능 연결"
        }
      ]
    },
    {
      "id": 5,
      "title": "NextAuth PostgreSQL 어댑터 설정",
      "description": "NextAuth와 PostgreSQL 데이터베이스 연동 설정",
      "status": "done",
      "priority": "medium",
      "dependencies": [
        4
      ],
      "createdAt": "2024-12-18T00:00:00Z",
      "updatedAt": "2024-12-18T00:00:00Z",
      "details": "NextAuth PostgreSQL 어댑터 설치 및 설정하여 세션 관리를 데이터베이스와 동기화",
      "testStrategy": "로그인/로그아웃 후 데이터베이스 세션 테이블 확인",
      "subtasks": []
    },
    {
      "id": 6,
      "title": "API 에러 처리 및 검증 강화",
      "description": "모든 API 엔드포인트의 에러 처리 및 데이터 검증 강화",
      "status": "pending",
      "priority": "medium",
      "dependencies": [
        2,
        3
      ],
      "createdAt": "2024-12-18T00:00:00Z",
      "updatedAt": "2024-12-18T00:00:00Z",
      "details": "체계적인 예외 처리, 입력 데이터 검증, 사용자 친화적 에러 메시지 구현",
      "testStrategy": "잘못된 입력값, 권한 오류, 서버 오류 등 다양한 에러 시나리오 테스트",
      "subtasks": []
    },
    {
      "id": 7,
      "title": "관리자 대시보드 기능 완성",
      "description": "관리자 페이지의 예약 관리 및 통계 기능 구현",
      "status": "done",
      "priority": "medium",
      "dependencies": [
        4
      ],
      "createdAt": "2024-12-18T00:00:00Z",
      "updatedAt": "2024-12-18T00:00:00Z",
      "details": "예약 현황 대시보드, 통계 차트, 사용자 관리 기능 완성",
      "testStrategy": "관리자 권한으로 모든 관리 기능 정상 동작 확인",
      "subtasks": [
        {
          "id": 1,
          "title": "관리자 인증 및 권한 체크 시스템 구현",
          "description": "관리자 로그인 후 권한 확인 및 관리자 전용 라우팅 보호 기능 구현",
          "details": "- 관리자 권한 체크 미들웨어 구현\\n- 관리자 전용 페이지 접근 제어\\n- 관리자 세션 관리",
          "status": "done",
          "dependencies": [],
          "parentTaskId": 7
        },
        {
          "id": 2,
          "title": "예약 현황 대시보드 구현",
          "description": "실시간 예약 현황을 보여주는 대시보드와 예약 승인/거부 기능 구현",
          "details": "- 예약 목록 조회 및 필터링\\n- 예약 승인/거부 버튼 및 API 연동\\n- 실시간 데이터 업데이트\\n- 예약 상태별 통계 표시",
          "status": "done",
          "dependencies": [],
          "parentTaskId": 7
        },
        {
          "id": 3,
          "title": "통계 및 분석 차트 구현",
          "description": "예약 통계, 월별/일별 이용률, 인기 시간대 등을 시각화하는 차트 구현",
          "details": "- 차트 라이브러리 통합 (Chart.js 또는 Recharts)\\n- 예약 통계 데이터 API 연동\\n- 월별/일별 예약 현황 차트\\n- 시간대별 이용률 차트",
          "status": "done",
          "dependencies": [],
          "parentTaskId": 7
        },
        {
          "id": 4,
          "title": "사용자 관리 기능 구현",
          "description": "아파트 입주민 정보 관리 및 사용자 계정 관리 기능 구현",
          "details": "- 사용자 목록 조회 및 검색\\n- 사용자 정보 수정/삭제\\n- 동/호수 관리 기능\\n- 사용자 권한 관리",
          "status": "done",
          "dependencies": [],
          "parentTaskId": 7
        },
        {
          "id": 5,
          "title": "공지사항 관리 기능 완성",
          "description": "관리자가 공지사항을 작성, 수정, 삭제할 수 있는 완전한 CRUD 기능 구현",
          "details": "- 공지사항 작성 폼 기능 연동\\n- 공지사항 수정/삭제 기능\\n- 공지사항 우선순위 설정\\n- 공지사항 활성화/비활성화",
          "status": "done",
          "dependencies": [],
          "parentTaskId": 7
        },
        {
          "id": 6,
          "title": "네비게이션 메뉴 연결 및 라우팅 개선",
          "description": "메인페이지 navbar에서 예약/공지사항 페이지로의 라우팅 연결",
          "details": "- 메인페이지 네비게이션에서 예약 페이지 연결\\n- 공지사항 페이지 연결\\n- 라우팅 경로 정리 및 개선",
          "status": "done",
          "dependencies": [],
          "parentTaskId": 7
        },
        {
          "id": 7,
          "title": "슈퍼관리자 시스템 및 관리자 승인 기능 구현",
          "description": "슈퍼관리자 계정 생성 및 관리자 회원가입 승인 시스템 구현",
          "details": "- 슈퍼관리자 계정 생성 (superadmin/allapt322410@)\\n- 관리자 회원가입 페이지 구현\\n- 관리자 승인 대기 시스템\\n- 슈퍼관리자의 관리자 승인/거부 기능",
          "status": "done",
          "dependencies": [],
          "parentTaskId": 7
        }
      ]
    },
    {
      "id": 8,
      "title": "성능 최적화 및 캐싱",
      "description": "데이터베이스 쿼리 최적화 및 적절한 캐싱 전략 구현",
      "status": "pending",
      "priority": "low",
      "dependencies": [
        6,
        7
      ],
      "createdAt": "2024-12-18T00:00:00Z",
      "updatedAt": "2024-12-18T00:00:00Z",
      "details": "SQL 쿼리 최적화, Redis 캐싱, API 응답 시간 개선",
      "testStrategy": "부하 테스트 및 응답 시간 측정",
      "subtasks": []
    },
    {
      "id": 9,
      "title": "프로젝트 디렉토리 구조 리팩토링",
      "description": "frontend/와 backend/ 디렉토리로 명확히 분리하여 프로젝트 구조 개선",
      "status": "done",
      "priority": "high",
      "dependencies": [
        5
      ],
      "createdAt": "2024-12-18T00:00:00Z",
      "updatedAt": "2024-12-18T00:00:00Z",
      "subtasks": [
        {
          "id": "9.1",
          "title": "frontend 디렉토리 생성 및 Next.js 파일 이동",
          "description": "src/, lib/, components/, package.json 등 프론트엔드 파일들을 frontend/ 디렉토리로 이동",
          "status": "done"
        },
        {
          "id": "9.2",
          "title": "import 경로 및 설정 파일 수정",
          "description": "이동된 파일들의 import 경로와 next.config.js, tsconfig.json 등 설정 파일 경로 수정",
          "status": "done"
        },
        {
          "id": "9.3",
          "title": "환경 변수 및 스크립트 경로 업데이트",
          "description": ".env.local, package.json scripts, API 호출 경로 등 업데이트",
          "status": "done"
        },
        {
          "id": "9.4",
          "title": "Docker 및 배포 설정 수정",
          "description": "docker-compose.yml, Dockerfile 등 배포 관련 설정을 새 구조에 맞게 수정",
          "status": "done"
        },
        {
          "id": "9.5",
          "title": "README 및 문서 업데이트",
          "description": "프로젝트 구조 변경에 따른 설명서 및 실행 방법 업데이트",
          "status": "done"
        }
      ]
    }
  ]
}